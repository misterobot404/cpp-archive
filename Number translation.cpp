// Подключаем библиотеку для работы с потоками ввода/вывода (cin/cout)
#include <iostream>
// Подключаем библиотеку для работы со строками
#include <string>
// устанавливаем пространство имен std
using namespace std;

// обьявляем функцию getSymbol с возвращаемым значением типа string. Функция переводит арабское число в греческий(ие) символы.
string getSymbol(int num, string hi, string re, string lo);

// функция main. Точка входа в программу.
int main() {
	// устанавливаем русскую локаль для корректного отображения кириллицы в консоли
	setlocale(LC_ALL, "rus");
	// бесконечный цикл для повторного отображения меню
	while (true)
	{
		// переменная size_t для хранения значения выбора пункта меню пользователем. size_t - целочисленный тип данных без знака.
		size_t select;
		// cout - поток вывода на консоль. endl - перевод строки, возврат каретки в начало строки.
		cout << "1. Перевед римских в арабские." << endl;
		cout << "2. Перевед арабских в римские." << endl;
		cout << "> ";
		// cin - запись содержимого потока ввода в переменную select
		cin >> select;
		// перевод строки
		cout << endl;
		// Если select равен 1
		if (select == 1) {
			// создаём буфер символов для хранения вводимого числа
			char lat[100];
			// целочисленная переменная для хранения результата перевода чисел
			int count = 0;
			cout << "Введите римское число не больше MMMCMXCIX: ";
			// очищаем предыдущий поток ввода
			cin.ignore();
			// считываем из потока 100 символов
			cin.getline(lat, 100);
			// чикл от 0 до последнего символа строки lat
			for (int i = 0; i < strlen(lat); i++) {
				// используем условный оператор ветвления switch для определения значения lat[i]
				switch (lat[i]) {
					// Если lat[i] равен lat[i]
				case 'M':
					// Прибавляем к итоговому число count 1000
					count += 1000;
					// Завершаем выполнение switch
					break;
					// См. пред.
				case 'D':
					count += 500;
					break;
				case 'C':
					// Если 'C' стоит не предпоследним и если следующий элемент равен 'D' или 'M', тогда от результата отнимаем 100
					if (i + 1 < strlen(lat) && (lat[i + 1] == 'D' || lat[i + 1] == 'M')) count -= 100;
					// В противном случае прибавляем к результату 100
					else count += 100;
					break;
					// См. пред.
				case 'L':
					count += 50;
					break;
					// См. пред.
				case 'X':
					if (i + 1 < strlen(lat) && (lat[i + 1] == 'L' || lat[i + 1] == 'C' || lat[i + 1] == 'M')) count -= 10;
					else count += 10;
					break;
					// См. пред.
				case 'V':
					count += 5;
					break;
					// См. пред.
				case 'I':
					if (i + 1 < strlen(lat) && (lat[i + 1] == 'V' || lat[i + 1] == 'X' || lat[i + 1] == 'C')) count -= 1;
					else count += 1;
					break;
				}
			}
			// Выводим результат перевода римского числа в арабское
			cout << count << endl << endl;
		}
		// Если select равен 2
		else if (select == 2) {
			// См. пред.
			cout << "Введите арабское число не больше 3999: ";
			// Целочисленная переменная для хранения арабского числа
			int arabien_num;
			// Если переменная введена не верно или её значение больше допустимого греческой системой (3999), завершаем перевод чисел и возвращаемся к меню
			if (!(cin >> arabien_num) || (arabien_num > 3999)) {
				cerr << "Невозможно инициализировать число!" << endl;
				// Переход к следующей итерации внешнего цикла
				continue;
			}
			// Хранение итогового римского числа
			string rome_num;
			// Перевод тысячей в римские символы и добавление их к итоговому числу
			rome_num += getSymbol(arabien_num / 1000, "", "", "M");
			// Отбросить тысячную часть от арабского числа
			arabien_num %= 1000;
			// Перевод сотней в римские символы и добавление их к итоговому числу
			rome_num += getSymbol(arabien_num / 100, "M", "D", "C");
			// Отбросить сотую часть от арабского числа
			arabien_num %= 100;
			// Перевод десятков в римские символы и добавление их к итоговому числу
			rome_num += getSymbol(arabien_num / 10, "C", "L", "X");
			// Отбросить десятую часть от арабского числа
			arabien_num %= 10;
			// Перевод единиц в римские символы и добавление их к итоговому числу
			rome_num += getSymbol(arabien_num, "X", "V", "I");
			// Вывести итоговое римское число
			cout << rome_num << endl << endl;
		}
		// Если введенно какое-то другое значение выходим из программы
		else break;
	}
	// встроенная функция windows для остановки приложения
	system("pause");
	// возвращаем звачение из основной функции main. Завершаем работу программы.
	return 0;
}

// Описание функции перевода арабского символа в риские. В зависимости от разряда арабского числа hi, re и lo будут меняться.
string getSymbol(int num, string hi, string re, string lo)
{
	// См. пред.
	switch (num)
	{
	// Если арабский символ равен 9
	case 9:
		// Возвращаем результат lo + hi.
		// hi, re, lo римские символы полученные из параметров.
		return lo + hi;
	// См. пред.
	case 8:
		return re + lo + lo + lo;
	case 7:
		return re + lo + lo;
	case 6:
		return re + lo;
	case 5:
		return re;
	case 4:
		return lo + re;
	case 3:
		return lo + lo + lo;
	case 2:
		return lo + lo;
	case 1:
		return lo;
	// Если арабский символ равен 0, возращаем пустую строку.
	case 0:
		return "";
	}
}